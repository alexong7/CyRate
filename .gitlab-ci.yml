stages:
  - maventry
  - maventest
  - mavenDeploy
  - androidtry
  - androidtest
  # - androidtry

maven-build: #this is a JOB
  stage: maventry
  tags:
    - springboot # this is LINK to the shell runner on the remote-server
  script:
    - cd Backend/cy_rate #change directory to where you have your springboot application
    - mvn package
  except:
    - reviews
maven-test:
  stage: maventest
  tags:
    - springboot
  script:
      - cd Backend/cy_rate
      - mvn test
  artifacts:
    paths:
      - Backend/target/*.jar
autoDeploy:
  stage: mavenDeploy 
  tags:
    - springboot
  script:
    - cd Backend/cy_rate
    - mvn package
    - sudo mv target/*.jar /target/web-demo.jar
    - sudo systemct1 stop system-web-demo
    - sudo systemct1 start system-web-demo

    #basically builds, then copies the jar to the /target folder, then stops existing service, and finally restarts it.

android-build: #this is another job
   image: gjandres/android-ci:latest # this is a directive to DOCKER
   stage: androidtry
   tags:
     - android_studio #this is LINK to the docker runner on the remote-server
   before_script:
     - export GRADLE_USER_HOME=`pwd`/.gradle
     - chmod +x ./Frontend/CyRate/gradlew #change directory to where you have ‘gradlew’ in your android directory
   script:
     - cd Frontend/CyRate #change directory to where you have your android application
     - ./gradlew assemble
   artifacts:
     paths:
       - Android_test/app/build/outputs/
android-test:
  image: gjandres/android-ci:latest
  stage: androidtest
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./Frontend/CyRate/gradlew
  tags:
    - android_studio
  script:
    - cd Frontend/CyRate
    - ./gradlew test

